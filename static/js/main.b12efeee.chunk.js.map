{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toLocaleString","url","fetchData","country","a","changableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","length","lineChart","labels","datasets","label","borderColor","fill","barChart","backgroundColor","oprtions","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","href","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b12efeee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'\nimport CountUp from 'react-countup';\nimport cx from 'classnames';\n\nimport styles from './Cards.module.css';\nconst Cards = ({ data : {confirmed, recovered, deaths, lastUpdate}} ) => { \n    if(!confirmed) {\n        return 'Loading...';\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing ={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\" >\n                            <CountUp start={0} end={confirmed.value} duration={1.5} separator=\",\"/>\n                        </Typography>\n                        <Typography color='textSecondary'>{new Date(lastUpdate).toLocaleString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\" >\n                            <CountUp start={0} end={recovered.value} duration={1.5} separator=\",\"/>\n                        </Typography>                       \n                        <Typography color='textSecondary'>{new Date(lastUpdate).toLocaleString()}</Typography>\n                        <Typography variant=\"body2\">Number of recoveries COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\" >\n                            <CountUp start={0} end={deaths.value} duration={1.5} separator=\",\"/>\n                        </Typography>                       \n                        <Typography color='textSecondary'>{new Date(lastUpdate).toLocaleString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards;","import axios from 'axios';\n\nconst url = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async(country) => {\n    let changableUrl = url;\n\n    if(country) {\n        changableUrl = `${url}/countries/${country}`;\n    }\n\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changableUrl); \n\n        return { confirmed, recovered, deaths, lastUpdate, }\n\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchDailyData = async() => {\n    try {\n        const { data } = await axios.get(`${url}/daily`); \n\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }));\n        return modifiedData;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async() => {\n    try {\n        const { data: { countries }} = await axios.get(`${url}/countries`);\n        \n        return countries.map((country) => country.name);\n    } catch (error) {\n        console.log(error);\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar} from 'react-chartjs-2';\n\nimport styles from './Chart.module.css';\n \nconst Chart = ({ data: { confirmed, deaths, recovered }, country}) => {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect( () => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        fetchAPI();\n    }, []);\n\n    console.log(dailyData);\n    console.log(dailyData.length);\n    const lineChart = (\n        dailyData.length ? (\n        <Line\n            data = {{\n                labels: dailyData.map(({ date }) => date),\n                datasets: [{\n                    data: dailyData.map(({ confirmed}) => confirmed),\n                    label: \"Infected\",\n                    borderColor: '#3333ff',\n                    fill: true,\n                }, {\n                    data: dailyData.map(({ deaths}) => deaths),\n                    label: \"Deaths\",\n                    borderColor: 'red',\n                    borderColor: 'rgba(255, 0, 0 , 0.5)',\n                    fill: true,\n                }],\n            }}\n        />) : null  \n    );\n\n    const barChart = (\n        confirmed\n        ? (\n            <Bar\n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: [\n                            'rgba(0 , 0, 255, 0.5)',\n                            'rgba(0 , 255, 0, 0.5)',\n                            'rgba(255 , 0, 0, 0.5)',\n                        ],\n                        data:[ confirmed.value, recovered.value, deaths.value]\n                    }]\n                }}\n                oprtions={{\n                    legend: { display: false },\n                    title: { display: true, text:`Current state in ${country}`},\n                }}\n            />\n        ) : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, { useState, useEffect }  from 'react';\nimport { NativeSelect, FormControl} from '@material-ui/core';\n\nimport styles from './CountryPicker.module.css'\nimport { fetchCountries } from '../../api'\n\nconst CountryPicker = ({ handleCountryChange }) => {\n\n    const [ fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect( () => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries()); \n        }\n        fetchAPI();\n    }, [setFetchedCountries])\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker;","\nimport React from 'react';\n\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nimport coronaImage from './images/image.png'\n\nclass App extends React.Component {\n\n    state = {\n        data : {},\n        country: '',\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n        \n        this.setState({ data: fetchedData }); \n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        \n        this.setState({ data: fetchedData, country: country }); \n    }\n\n    render() {\n        const { data, country } = this.state;\n        return (\n            <div className={styles.container}>\n                <img className={styles.image } src={coronaImage} alt=\"COVID_19\"/>\n                <Cards data={data} />\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <Chart data={data} country={country}/>\n                <p>\n                Developed by \n                <a href=\"mailto:mail2zubaer@gmail.com\" target=\"_top\"> Zubaer Ahmad</a>\n                </p>\n            </div> \n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root')); ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.f3077234.png\";"],"sourceRoot":""}